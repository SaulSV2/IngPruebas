{"ast":null,"code":"var _jsxFileName = \"/Users/saulsv/OneDrive - IBM/Capacitacione GBS/FronEnd/React Test Driven/Proyectos/react_tdd/lootcheck/src/components/App.js\";\nimport React from 'react';\nimport Wallet from './Wallet';\nimport Loot from './Loot'; // una oprimizacion es àsar esto a statemen functional component, esto es un componente de react totalmetne fucnional y retorna jsx y no se extiende de component, no tiene estados ni nada de eso, casi rodos los componentrs que usa app necesitan la clase Component, pero esta no, por lo que se puede hacer un statement functional component haciendola una funcion que retonra el render\n// se tiene beneficio sabiendo que solo se retorna jsx en este componente, no se tiene que preocupar del binding del onjeto, mejora el performance, tambien se tiene menos codigo\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loot Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Wallet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Loot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        href: \"https://www.coindesk.com/price\",\n        children: \"Coindesk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/saulsv/OneDrive - IBM/Capacitacione GBS/FronEnd/React Test Driven/Proyectos/react_tdd/lootcheck/src/components/App.js"],"names":["React","Wallet","Loot","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;AACA;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AACd,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,6CAAgB;AAAG,QAAA,MAAM,EAAC,QAAV;AAAmB,QAAA,IAAI,EAAC,gCAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD;;KAAMA,G;AAaN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport Wallet from './Wallet';\nimport Loot from './Loot';\n\n// una oprimizacion es àsar esto a statemen functional component, esto es un componente de react totalmetne fucnional y retorna jsx y no se extiende de component, no tiene estados ni nada de eso, casi rodos los componentrs que usa app necesitan la clase Component, pero esta no, por lo que se puede hacer un statement functional component haciendola una funcion que retonra el render\n// se tiene beneficio sabiendo que solo se retorna jsx en este componente, no se tiene que preocupar del binding del onjeto, mejora el performance, tambien se tiene menos codigo\nconst App = () => {\n    return (\n        <div>\n            <h2>Loot Check</h2>\n            <hr />\n            <Wallet />\n            <hr />\n            <Loot />\n            <div>Powered by <a target=\"_blank\" href=\"https://www.coindesk.com/price\">Coindesk</a></div>\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}